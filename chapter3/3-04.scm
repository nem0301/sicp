(load "test")

(define (make-account balance passwd)
  (define incorrect-count 0)
  (define (call-the-cops)
    "cops!!!!!!!!!!!!"
    )
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount)) balance)
        "Insufficient funds"
        ))
  (define (deposit amount)
    (set! balance (+ balance amount)) 
    balance
    )    
  (define (dispatch pw m)    
    (if (eq? passwd pw)
        (begin
         (set! incorrect-count 0)
         (cond ((eq? m 'withdraw) withdraw)
               ((eq? m 'deposit) deposit)
               ((eq? m 'balance) balance)
               (else (error "Uknown request - MAKE-ACCOUNT" m))                                      
               ))
        (lambda (x)        
          (set! incorrect-count (+ incorrect-count 1))
          (if (>= incorrect-count 7)
              (call-the-cops)             
              "Incorrect password"))
        )        
    )
  dispatch)

(define (test)
  (define acc (make-account 100 'secret))
  (append-item ((acc 'secret 'withdraw) 40))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))
  (append-item ((acc 'other 'deposit) 50))  
  
  (testing results-list)
  )